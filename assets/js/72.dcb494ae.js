(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{478:function(t,v,_){"use strict";_.r(v);var e=_(2),n=Object(e.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"cvte"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cvte"}},[t._v("#")]),t._v(" CVTE")]),t._v(" "),v("p",[t._v("一面")]),t._v(" "),v("ul",[v("li",[t._v("项目介绍")]),t._v(" "),v("li",[t._v("技术栈")]),t._v(" "),v("li",[t._v("设计模式")])]),t._v(" "),v("p",[t._v("二面")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("项目难点和业绩")])]),t._v(" "),v("li",[v("p",[t._v("设计模式在实际工作中的业务, 说了一些 策略模式, 代理模式, 顺带提了一些职责链和适配器")])]),t._v(" "),v("li",[v("p",[t._v("SOLID原则")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://www.freecodecamp.org/chinese/news/solid-principles/",target:"_blank",rel:"noopener noreferrer"}},[t._v("freecodecamp - 面向对象编程的 SOLID 原则"),v("OutboundLink")],1)]),t._v(" "),v("p",[v("strong",[t._v("S")]),t._v(" - 单一职责\n"),v("strong",[t._v("O")]),t._v(" - 开闭\n"),v("strong",[t._v("L")]),t._v(" - 里式替换, 子类能够替换基类\n"),v("strong",[t._v("I")]),t._v(" - 接口隔离, 接口独立, 特定接口优于一个多用途接口\n"),v("strong",[t._v("D")]),t._v(" - 依赖倒置, class 依赖接口和抽象类而不是具体的类和函数")])]),t._v(" "),v("li",[v("p",[t._v("了解前端的趋势或新技术吗")]),t._v(" "),v("p",[t._v("Vue相关的提了一些生态圈技术, nuxt.js")])])])])}),[],!1,null,null,null);v.default=n.exports}}]);